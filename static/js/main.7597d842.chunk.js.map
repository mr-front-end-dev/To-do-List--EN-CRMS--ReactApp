{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Projects/Clock/styled.js","Projects/Clock/index.js","Projects/styled.js","Projects/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","useTasks.js","App.js","GlobalStyle.js","reportWebVitals.js","index.js","theme.js"],"names":["StyledForm","styled","form","theme","breakpoint","mobileMax414","Input","input","color","lightgrey","mobileMax360","Button","button","white","crimson","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","current","focus","ref","value","type","placeholder","onChange","target","required","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","deepskyblue","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","StyledClock","div","formatDate","date","toLocaleString","undefined","weekday","hour","minute","second","day","month","Clock","Date","setDate","useEffect","intervalId","setInterval","clearInterval","Links","section","Link","a","deepSkyBlue","Projects","href","Wrapper","lightslategrey","Buttons","toggleHideDone","setAllDone","length","disabled","every","Header","header","Title","h2","Body","Section","title","body","extraHeaderContent","Container","children","getInitialTasks","tasksFromLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","setItem","stringify","filter","useTasks","className","GlobalStyle","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","black","document","getElementById"],"mappings":"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","file":"static/js/main.7597d842.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  grid-gap: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax414}px) {\r\n      grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 20px; \r\n  border: 1px solid ${({ theme }) => theme.color.lightgrey};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax360}px) {\r\n    width: 75vw;\r\n    font-size: 14px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 20px; \r\n  color: ${({ theme }) => theme.color.white}; \r\n  background-color: ${({ theme }) => theme.color.crimson}; \r\n  border: none;\r\n  transition: color 0.3s;\r\n\r\n  @media (max-width: ${({ theme }) => theme.mobileMax360}px) {\r\n      width: 75vw;\r\n      font-size: 20px;\r\n      text-align: center;\r\n  }\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n`;","import React, { useState, useRef } from 'react';\r\nimport { Input, Button, StyledForm } from './styled';\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const onFormSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n    \r\n    const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n    if (!trimmedNewTaskContent) {\r\n      return;\r\n    }\r\n\r\n    addNewTask(trimmedNewTaskContent);\r\n    setNewTaskContent(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <Input\r\n        ref={inputRef}\r\n        value={newTaskContent}\r\n        type=\"text\" \r\n        placeholder=\"What is there to do?\" \r\n        onChange={({ target }) => setNewTaskContent(target.value)}\r\n        required \r\n      />\r\n      <Button>Add new task</Button>\r\n    </StyledForm>\r\n  )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  margin: 0; \r\n  padding: 0; \r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  grid-gap: 10px;\r\n  align-items: center;\r\n  padding: 10px; \r\n  border-bottom: 1px solid ${({ theme }) => theme.color.lightgrey}; \r\n\r\n  ${({ hidden }) => hidden && css`\r\n    display: none;\r\n  `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n  ${({ done }) => done && css`\r\n    text-decoration: line-through;\r\n  `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border: none; \r\n  color: ${({ theme }) => theme.color.white}; \r\n  font-size: 22px;\r\n  width: 30px; \r\n  height: 30px; \r\n  padding: 0; \r\n  transition: filter 0.3s;\r\n\r\n   ${({ toggleDone }) => toggleDone && css`\r\n    background-color: ${({ theme }) => theme.color.deepskyblue}; \r\n  `} \r\n\r\n  ${({ remove }) => remove && css`\r\n    background-color: ${({ theme }) => theme.color.crimson};\r\n  `}\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n`;","import React from 'react';\r\nimport { List, Item, Content, Button } from './styled';\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <List>\r\n    {tasks.map(task => (\r\n      <Item \r\n        key={task.id}\r\n        hidden={task.done && hideDone}\r\n      >\r\n        <Button \r\n          toggleDone\r\n          onClick={() => toggleTaskDone(task.id)}\r\n        >\r\n          {task.done ? \"✔\" : \"\"}\r\n        </Button>\r\n        <Content done={task.done}>    \r\n         {task.id} - {task.content}\r\n        </Content>\r\n        <Button \r\n          remove\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n            🗑\r\n        </Button>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n)\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.div`\r\n  text-align: right;\r\n  font-family: monospace;\r\n  color:${({ theme }) => theme.color.crimson};\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  font-size: 16px;\r\n  padding: 20px;\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { StyledClock } from \"./styled\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n  weekday: \"long\",\r\n  hour: \"2-digit\",\r\n  minute: \"2-digit\",\r\n  second: \"2-digit\",\r\n  day: \"numeric\",\r\n  month: \"long\"\r\n});\r\n\r\nexport const Clock = () => {\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledClock>\r\n      Today is\r\n      {\" \"}\r\n      {formatDate(date)}\r\n    </StyledClock>\r\n  )\r\n}\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Links = styled.section`\r\n  background-color: ${({ theme }) => theme.color.white};\r\n  padding: 20px;\r\n  cursor: context-menu;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  cursor: context-menu;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin: 5px;\r\n  padding: 8px;\r\n  cursor: context-menu;\r\n  border-style: none;\r\n  background-color: ${({ theme }) => theme.color.crimson};\r\n  color: ${({ theme }) => theme.color.white};\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n\r\n  ${({ deepSkyBlue }) => deepSkyBlue && css`\r\n    background-color: ${({ theme }) => theme.color.deepskyblue};\r\n    color: ${({ theme }) => theme.color.white};\r\n  `}\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n`;\r\n\r\n","import React from 'react';\r\nimport { Clock } from \"./Clock\";\r\nimport { Links, Link, Button } from \"./styled\";\r\n\r\nconst Projects = () => (\r\n  <Links>\r\n    <Clock />\r\n    <Link href=\"#\"><Button>RU</Button></Link>\r\n    <Link href=\"#\"><Button>DE</Button></Link>\r\n    <Link href=\"#\"><Button>ES</Button></Link>\r\n    <Link href=\"#\"><Button>PL</Button></Link>\r\n    <Link href=\"#\"><Button>UA</Button></Link>\r\n    <Link href=\"#\"><Button deepSkyBlue>🌓</Button></Link>\r\n  </Links>\r\n)\r\n\r\nexport default Projects;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.color.deepskyblue};\r\n  border: none;\r\n  margin: 0 0 0 20px;\r\n  border-bottom: 1px solid transparent;\r\n  transition: filter 0.3s;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax414}px) {\r\n      flex-basis: 100%;\r\n      margin: 10px;\r\n  }\r\n\r\n  &:hover {\r\n    filter: brightness(110%);\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(120%);\r\n  }\r\n\r\n  &:disabled {\r\n    color: ${({ theme }) => theme.color.lightslategrey}\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Wrapper, Button } from './styled';\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <Wrapper>\r\n    {tasks.length > 0 && (\r\n      <>\r\n        <Button onClick={toggleHideDone}>\r\n          {hideDone ? \"Show\" : \"Hide\"} completed tasks\r\n        </Button>\r\n        <Button \r\n          onClick={setAllDone}\r\n          disabled={tasks.every(({ done }) => done)}\r\n        >\r\n          Complete all tasks\r\n        </Button>\r\n      </>\r\n    )}\r\n  </Wrapper> \r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n  margin: 10px 0;\r\n  background: ${({ theme }) => theme.color.white};  \r\n  box-shadow: 0 0 30px ${({ theme }) => theme.color.lightgrey}; \r\n`;\r\n\r\nexport const Header = styled.header`\r\n  border-bottom: 1px solid ${({ theme }) => theme.color.lightgrey}; \r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  grid-gap: 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px; \r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax414}px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  padding: 10px;\r\n  color: ${({ theme }) => theme.color.deepskyblue};\r\n  font-size: 30px;\r\n  margin: 0;\r\n  text-align: left;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  padding: 20px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax360}px) {\r\n    padding: 15px;\r\n  }\r\n`;","import React from 'react';\r\nimport { Wrapper, Header, Title, Body } from './styled';\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <Wrapper>\r\n    <Header>\r\n      <Title>{title}</Title>\r\n      {extraHeaderContent}\r\n    </Header>\r\n    <Body>\r\n      {body}\r\n    </Body>\r\n  </Wrapper> \r\n);\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h2`\r\n  padding: 10px;\r\n  color: ${({ theme }) => theme.color.deepskyblue};\r\n  font-size: 30px;\r\n  margin: 0;\r\n  text-align: left;\r\n`;","import React from 'react';\r\nimport { Title } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <Title>{title}</Title>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: 900px;\r\n  padding: 20px; \r\n  margin: 0 auto; \r\n`;","import React from 'react';\r\nimport { Wrapper } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n  <Wrapper>\r\n    {children}\r\n  </Wrapper>\r\n);\r\n\r\nexport default Container;","import { useEffect, useState } from \"react\";\r\n\r\nconst getInitialTasks = () => {\r\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\r\n  return tasksFromLocalStorage\r\n      ? JSON.parse(tasksFromLocalStorage)\r\n      : []\r\n  };\r\n\r\nexport const useTasks = () =>{\r\n  \r\n  const [tasks, setTasks] = useState(getInitialTasks);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if (task.id === id) {\r\n        return {...task, done: !task.done};\r\n      }\r\n\r\n      return task;\r\n    }));\r\n  }\r\n\r\n  const setAllDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({\r\n      ...task, \r\n      done: true,\r\n    })))\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks(tasks => [\r\n      ...tasks, \r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return {\r\n    tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    addNewTask,\r\n  };\r\n};","import React, { useEffect, useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Projects from \"./Projects\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const {\n    tasks, \n    removeTask, \n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  return (\n    <Container>\n      <Projects />\n      <Header title=\"To-do list\" />\n      <Section \n        title=\"Add new Task\" \n        body={\n          <Form \n            addNewTask={addNewTask}\n          />\n        } \n      />\n      <Section \n        title=\"To-do list\"\n        body={\n          <Tasks \n            tasks={tasks} \n            hideDone={hideDone} \n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n         />\n        }\n        extraHeaderContent={\n         <Buttons \n            tasks={tasks} \n            hideDone={hideDone} \n            toggleHideDone={toggleHideDone} \n            setAllDone={setAllDone}\n          />\n        }\n      />\n\n      <section className=\"section section__stats\">\n        <div />\n      </section>\n\n  </Container>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  .body {\r\n    font-family: 'Montserrat', sans-serif;\r\n    background-color: ${({ theme }) => theme.color.lightgrey};\r\n  }\r\n`;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalStyle } from './GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","export const theme = {\r\n  color: {\r\n    white: \"#fff\",\r\n    black: \"#000\",\r\n    deepskyblue: \"#00bfff\",\r\n    crimson: \"#ec365b\",\r\n    lightslategrey: \"#778899\",\r\n    lightgrey: \"#d3d3d3\",\r\n  },\r\n  breakpoint: {\r\n    mobileMax360: 360,\r\n    mobileMax414: 414,\r\n  },\r\n};"],"sourceRoot":""}